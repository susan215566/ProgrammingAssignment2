#conditional proportions
prop.table(lottery,1)
#######
#Simulate 2x2 tables
#######
###4 independent Poissons
mu<-c(100, 300, 200, 400)
yvec<-rpois(4,mu)
ytable<-matrix(yvec, ncol=2, byrow=TRUE)
#can we recover estimates of multinomial distribution parameters?
prop.table(ytable)
#can we recover estimates of binomial distribution parameters?
prop.table(ytable,1)
###2 independent binomials
pitrue<-c(3/4, 2/3)
n2<-c(400, 600)
yvec2<-rbinom(2, n2, pitrue)
ytable2<-cbind(n2-yvec2, yvec2)
#######
#relationships
#######
#difference of proportions
prop.test(lottery, correct=FALSE)
#risk ratio (rate ratio, relative risk)
install.packages("epitools")
library(epitools)
?riskratio
riskratio.wald(lottery)
#odds ratio
?oddsratio
oddsratio.wald(lottery)
chisq.test(lottery, correct=FALSE)
#######
#Airline Data
#######
#conditional tables
chicago<-matrix(c(1755, 2158, 637, 669), nrow=2, byrow=2,
dimnames=list(airline=c("American", "United"), ontime=c("On Time", "Delay")))
chicago
notchicago<-matrix(c(3562, 1079, 533, 124), nrow=2, byrow=2,
dimnames=list(airline=c("American", "United"), ontime=c("On Time", "Delay")))
notchicago
#marginal table
allorigins<-chicago+notchicago
allorigins
#some interesting R code for working with multi-dimensional tables.
library(abind)
airline.array<-abind(chicago, notchicago, along=3, make.names=TRUE)
airline.array
install.packages("abind")
#######
#Airline Data
#######
#conditional tables
chicago<-matrix(c(1755, 2158, 637, 669), nrow=2, byrow=2,
dimnames=list(airline=c("American", "United"), ontime=c("On Time", "Delay")))
chicago
notchicago<-matrix(c(3562, 1079, 533, 124), nrow=2, byrow=2,
dimnames=list(airline=c("American", "United"), ontime=c("On Time", "Delay")))
notchicago
#marginal table
allorigins<-chicago+notchicago
allorigins
#some interesting R code for working with multi-dimensional tables.
library(abind)
airline.array<-abind(chicago, notchicago, along=3, make.names=TRUE)
airline.array
pvar<-function(n1,n2,s1,s2){((n1-1)*s1+(n2-1)*s2)/(n1+n2-2)>-c
+     return(c)}
> pvar(4,5,0.21631,1.179481)
pvar<-function(n1,n2,s1,s2){((n1-1)*s1+(n2-1)*s2)/(n1+n2-2)>-c
+     return(c)}pvar(4,5,0.21631,1.179481)
pvar<-function(n1,n2,s1,s2){((n1-1)*s1+(n2-1)*s2)/(n1+n2-2)>-c
+   return(c)}
pvar(4,5,0.21631,1.179481)
?pvar
pvar(4,5,0.21631,1.179481)
pvar<-function(n1,n2,s1,s2) {((n1-1)*s1+(n2-1)*s2)/(n1+n2-2)>-c
+   return(c)}
pvar<-function(n1,n2,s1,s2) {((n1-1)*s1+(n2-1)*s2)/(n1+n2-2)>-c
return(c)}
pvar(4,5,0.21631,1.179481)
pvar<-function(n1,n2,s1,s2) {(((n1-1)*s1)+((n2-1)*s2))/(n1+n2-2)>-c
return(c)}
pvar(4,5,0.21631,1.179481)
pvar<-function(n1,n2,s1,s2)
{(((n1-1)*s1)+((n2-1)*s2))/(n1+n2-2)>-c
return(c)
}
pvar(4,5,0.21631,1.179481)
pvar<-function(n1,n2,s1,s2)
{(((n1-1)*s1)+((n2-1)*s2))/(n1+n2-2)=c
return(c)
}
pvar(4,5,0.21631,1.179481)
pvar<-function(n1,n2,s1,s2)
{(((n1-1)*s1)+((n2-1)*s2))/(n1+n2-2) -> c
return(c)
}
pvar(4,5,0.21631,1.179481)
install.packages("rjags")
data=data.frame(Microbiologic=c(97.2,105.8,99.5,100.0,93.8,79.2,72.0,72.0,69.5,20.5,95.2,90.8,96.2,96.2,91.0),Hydroxylamine=c(97.2,97.8,96.2,101.8,88.0,74.0,75.0,67.5,65.8,21.2,94.8,95.8,98.0,99.0,100.2))
head(data)
meanX-meanY<-data$Microbiologic-data$HydroxylamineÌ…
meanX-meanY<-data$Microbiologic-data$Hydroxylamine
X-Y<-data$Microbiologic-data$Hydroxylamine
data$(X-Y)<-data$Microbiologic-data$Hydroxylamine
data$X-Y<-data$Microbiologic-data$Hydroxylamine
data$X-Y <- data$Microbiologic-data$Hydroxylamine
attach(data)
data$X-Y <-Microbiologic-Hydroxylamine
data$X-Y=Microbiologic-Hydroxylamine
data=data.frame(Microbiologic=c(97.2,105.8,99.5,100.0,93.8,79.2,72.0,72.0,69.5,20.5,95.2,90.8,96.2,96.2,91.0),Hydroxylamine=c(97.2,97.8,96.2,101.8,88.0,74.0,75.0,67.5,65.8,21.2,94.8,95.8,98.0,99.0,100.2))
data
data=data.frame(Micro=c(97.2,105.8,99.5,100.0,93.8,79.2,72.0,72.0,69.5,20.5,95.2,90.8,96.2,96.2,91.0),Hydro=c(97.2,97.8,96.2,101.8,88.0,74.0,75.0,67.5,65.8,21.2,94.8,95.8,98.0,99.0,100.2))
data$M-H<-data$Micro-data$Hydro
data$difference <-data$Micro-data$Hydro
data
data$Difference <-data$Micro-data$Hydro
data
data=data.frame(Micro=c(97.2,105.8,99.5,100.0,93.8,79.2,72.0,72.0,69.5,20.5,95.2,90.8,96.2,96.2,91.0),Hydro=c(97.2,97.8,96.2,101.8,88.0,74.0,75.0,67.5,65.8,21.2,94.8,95.8,98.0,99.0,100.2))
data
data$Difference <-data$Micro-data$Hydro
data
sum(data$Micro)
rbind(data, c("Total",apply(data[,-1], 2, sum, na.rm=TRUE)))
rbind(data, c("Total",apply(data[,] 2, sum, na.rm=TRUE)))
rbind(data, c("Total",apply(data[,], 2, sum, na.rm=TRUE)))
rbind(data, c("Total",apply(data[,], 2, sum)))
data=data.frame(Micro=c(97.2,105.8,99.5,100.0,93.8,79.2,72.0,72.0,69.5,20.5,95.2,90.8,96.2,96.2,91.0),Hydro=c(97.2,97.8,96.2,101.8,88.0,74.0,75.0,67.5,65.8,21.2,94.8,95.8,98.0,99.0,100.2))
data$Difference <-data$Micro-data$Hydro
data
rbind(data, apply(data[,3], 2, mean))
rbind(data, apply(data, 2, mean))
rbind(data, apply(data[,3], 1, mean))
rbind(data, apply(data[,], 1, mean))
data=data.frame(Micro=c(97.2,105.8,99.5,100.0,93.8,79.2,72.0,72.0,69.5,20.5,95.2,90.8,96.2,96.2,91.0),Hydro=c(97.2,97.8,96.2,101.8,88.0,74.0,75.0,67.5,65.8,21.2,94.8,95.8,98.0,99.0,100.2))
data
data
data$Difference <-data$Micro-data$Hydro
data
with(data,mean(Difference)
with(data,mean(Difference))
mean(data$Difference))
mean(data$Difference)
sd(data$difference)
sd(data$Difference)
t.test(Micro,Hydro,data=data,paired=T)
t.test(data$Micro,data$Hydro,paired=T)
data=data.frame(Micro=c(97.2,105.8,99.5,100.0,93.8,79.2,72.0,72.0,69.5,20.5,95.2,90.8,96.2,96.2,91.0),Hydro=c(97.2,97.8,96.2,101.8,88.0,74.0,75.0,67.5,65.8,21.2,94.8,95.8,98.0,99.0,100.2))
data
mean(data$Micro-data$Hydro)
sd(data$Micro,data$Hydro)
s1=sd(data$Micro)
s2=sd(data$Hydro)
s1
s2
s1=var(data$Micro)
s1
s2=var(data$Hydro)
s2
pvar(15,15,s1,s2)
t.test(data$Micro,data$Hydro)
source('~/Library/Containers/com.apple.mail/Data/Library/Mail Downloads/7A52F2B1-0ADE-4998-9F5C-B15FE92265CB/schools.R')
################################################
## Posterior Simulation Example
data=read.csv("ex1320.csv")
getwd()
oil<-data.frame(x=c(4,5,8,11,12,16, 17, 20, 22, 28, 30, 31,39),y=c(5, 7, 10, 10, 14, 15, 13, 25, 20, 24, 31, 28,39))
library(ggplot2)
qplot(x,y, data=oil, method="lm")
qplot(x,y, oil)
qplot(x,y, data=oil)
qplot(x,y, data=oil, size=4, geom="smooth", method="lm")
qplot(x,y, data=oil, size=4, geom="smooth")
qplot(x,y, data=oil, size=4)
fit<-lm(y~x,oil)
summary(fit)
ggplot(oil,aes(x=x,y=y))+geom_point()+xlim(0,45)+ylim(0,45)
summary(oil)
length(oil)
length(oil$x)
newdata<-data.frame(x=seq(0,max(oil$x)+5, length=51))
predict(fit,interval="confidence", newdata=newdata)
list.model<-data.frame(model=c("None","A","B","C","AB","AC","BC","ABC"),RSS=c(8100,6240,5980,6760,5500,5250,5750,5160),df=c(27,26,26,26,25,25,25,24))
list.model$p<-28-list.model$df
list.model
list.model$sigmasquared <-list.model$RSS/list.model$df
list.model
list.model$adjR2<-1-((list.model$RSS*27)/(8100*list.model$df))
list.model
list.model$Cp<-(list.model$RSS/(5160/24))-28+2*list.model$p
list.model
list.model$BIC<-(28*log(list.model$RSS/28))+(log(28)*(list.model$p+1))
list.model
library(plyr)
arrange(list.model,sigmasquared)
arrange(list.model,Cp)
data=c(1,2,3,4,5,6,7,8)
mean(data)
which.max(data)
which.min(data)
data[>5]
data[subset==c(>5)]
which(data==3)
data>3
sum(data>3)
data[data>3]
jiayu=c(11,12,13,14,15,16,17)
mean(jiayu)
jiayu[jiayu>14]
sum(jiayu>14)
which.max(jiayu)
which.max(jiayu)
which.min(jiayu)
jiayu=c(21,22,13,14,15,16,17)
mean(jiayu)
jiayu[jiayu>14]
sum(jiayu>14)
which.max(jiayu)
which.min(jiayu)
?which.max
max(jiayu)
min(jiayu)
install.packages("swirl")
library("swirl")
ls()
rm(list=ls())
swirl()
exit()
hello
search()
Sys.time()
x <- c("a","b","c")
as.complex(x)
install.packages("UsingR")
library(UsingR)
data(galton)
data=data(galton)
head(data)
data(galton)
library(reshape)
dev.off()
library(datasets)
data(iris)
?iris
apply(iris,iris[iris$Species=="virginica",]$Sepal.Length, mean)
apply(split(iris, Species), iris$Sepal.Length, mean)
apply(split(iris, iris$Species), iris$Sepal.Length, mean)
s=split(iris, iris$Species)
apply(s, iris$Sepal.Length, mean)
lpply(s, iris$Sepal.Length, mean)
lapply(s, iris$Sepal.Length, mean)
sapply(s, function(x) colMeans(x[,iris$Sepal.Length])
sapply(s, function(x) colMeans(x[,iris$Sepal.Length]))
recover()
trace()
browsesr()
sapply(s, function(x) colMeans(x[,c("Sepal.Length")]))
s
s$virginica
apply(s$virginica, Sepal.Length, mean))
apply(s$virginica, Sepal.Length, mean)
apply(s$virginica, s$virginica$Sepal.Length, mean)
colMeans(s$virginica)
colMeans(s$virginica$Sepal.Length)
apply(s$virginica,2,mean)
lapply(s$virginica,function(x) colMeans(x[,"Sepal.Length])))
lapply(s$virginica,function(x) colMeans(x[,"Sepal.Length]))))
lapply(s$virginica,function(x) colMeans(x[,1]))
lapply(s$virginica,function(x) colMeans(x[, c("Sepal.Length")]))
lapply(s$virginica,function(x) colMeans(x[, c("Sepal.Length","Sepal.Width")]))
lapply(s,function(x) colMeans(x[, c("Sepal.Length","Sepal.Width")]))
lapply(s,function(x) colMeans(x[, c("Sepal.Length")]))
lapply(s,function(x) colMeans(x[, "Sepal.Length"]))
apply(iris[, 1:4], 2, mean)
library(datasets)
data(mtcars)
?mtcars
lapply(mtcars, mean)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
sapply(split(iris$Sepal.Length,iris$Species),mean)
sapply(mtcars, cyl, mean)
sapply(split(mtcars$mpg, mtcars$cyl), meandif)
result=sapply(split(mtcars$mpg, mtcars$cyl), mean)
result$8
26.66364-15.1
debug(ls)
ls
ls()
getwd()
if(!file.exists("tidydata")){
dir.create("tidydata")
}
file<-https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv
file<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
down.file(file, destfile="./tidydata/survey.csv",method="curl")
download.file(file, destfile="./tidydata/survey.csv",method="curl")
list.files("./tidydata")
data=read.csv("survey.csv")
data=read.csv("survey.csv")
data=read.csv("./tidydata/survey.csv")
head(data)
data[,data$VAL]
data$VAL
head(data$VAL)
sum(data$VAL>1,000,000)
table(data$VAL>1,000,000)
data$VAL>1,000,000
data[data$VAL>24,]
rowSum(data[data$VAL>24,])
rowSums(data[data$VAL>24,])
rowSums(data$VAL>24)
apply(data[data$VAL>24,],1,sum)
apply(data[data$VAL>24,], row ,sum)
?apply
apply(as.matrix(data[data$VAL>24,]), 1 ,sum)
head(data[data$VAL>24,])
str(data[data$VAL>24,])
nrow(data[data$VAL>24,])
filex<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx"
download.file(filex,destfile="./tidydata/cloud.xlsx",method="curl")
library(xlsx)
install.packages("xlsx")
library(xlsx)
cloudata<-read.xlsx("./tidydata/cloud.xlsx",sheetIndex=1,header=True)
head(cloudata)
list.files("./tidydata")
cloud<-read.xlsx("./tidydata/cloud.xlsx",sheetIndex=1,header=True)
cloud<-read.xlsx("./tidydata/cloud.xlsx",sheetIndex=1)
head(cloud)
cloud<-read.xlsx("./tidydata/cloud.xlsx",sheetIndex=1,header=TRUE)
head(cloud)
colIndex<-7:15
rowIndex<-18:23
cloudsubset<-read.xlsx("./tidydata/cloud.xlsx",sheetIndex=1,colIndex=colIndex,rowIndex=rowIndex)
cloudsubset
dat<-read.xlsx("./tidydata/cloud.xlsx",sheetIndex=1,colIndex=colIndex,rowIndex=rowIndex)
sum(dat$Zip*dat$Ext,na.rm=T)
library(XML)
install.packages("XML")
library(XML)
files<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
doc<-xmlTreeParse(files, useInternal=T)
files<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
doc<-xmlTreeParse(files, useInternal=T)
files<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
doc<-xmlTreeParse(files)
doc<-xmlTreeParse(files,useInternal=T)
files<-"http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
doc<-xmlTreeParse(files,useInternal=T)
rootNote<-xmlRoot(doc)
xmlName(rootNote)
names(rootNote)
head(doc)
head(rootNote)
rootNote[[1]]
rootNote[[1]][[1]]
xmlSApply(rootNote,xmlValue)
xpathSApply(rootNote, "//zipcode",xmlValue)
zip=xpathSApply(rootNote, "//zipcode",xmlValue)
zip[zip==21231]
zip2=zip[zip==21231]
str(zip2)
file3<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv"
download.file(file3,destfile="./tidydata/cfront.csv",method="curl")
DT<-fread(cfront.csv)
?fread
??fread
library(data.table)
install.packages("data.table")
library(data.table)
DT<-fread("./tidydata/cfront.csv")
head(DT)
system.time(mean(DT$pwgtp15,by=DT$SEX))
system.time(rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2])
system.time(rowMeans(DT)[DT$SEX==1]& rowMeans(DT)[DT$SEX==2])
system.time(sapply(split(DT$pwgtp15,DT$SEX),mean))
system.time(tapply(DT$pwgtp15,DT$SEX,mean))
system.time(DT[,mean(pwgtp15),by=SEX])
system.time(mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15))
system.time(mean(DT[DT$SEX==1,]$pwgtp15)&mean(DT[DT$SEX==2,]$pwgtp15))
head(data[data$VAL>24,])
tail(data[data$VAL>24,])
tail(data$VAL)
head(data$VAL)
nrow(data[data$VAL>=24,])
nrow(data[data$VAL>=24,],na.rm=T)
nrow(data[data$VAL>=24,],rm.na=T)
?nrow
data=read.csv("./tidydata/survey.csv",rm.na=T)
?rm.na
?na.rm
??na.rm
??rm.na
?read.csv
table(data[data$VAL>=24,])
as.table(data[data$VAL>=24,])
data.table(data[data$VAL>=24,])
data2=data[data$VAL>=24,37:38])
data2=data[data$VAL>=24,37:38]
head(data2)
tail(data2)
data2
data2=data[data$VAL=24,37:38]
data2=data[data$VAL==24,37:38]
nrow(data2)
head(data2)
data2=data[data$VAL==24,37:38]
head(data2)
data2=data[data$VAL=="24",37:38]
nrow(data2)
head(data2)
data2=data[data$VAL==c("24"),37:38]
nrow(data2)
data=read.csv("./tidydata/survey.csv")
data2=data[data$VAL==c("24"),37:38]
nrow(data2)
head(data2)
system.time(mean(DT$pwgtp15,by=DT$SEX))
system.time(rowMeans(DT)[DT$SEX==1]& rowMeans(DT)[DT$SEX==2])
system.time(sapply(split(DT$pwgtp15,DT$SEX),mean))
system.time(tapply(DT$pwgtp15,DT$SEX,mean))
system.time(DT[,mean(pwgtp15),by=SEX])
system.time(mean(DT[DT$SEX==1,]$pwgtp15)&mean(DT[DT$SEX==2,]$pwgtp15))
data[data$VAL==24,37:38])
data[data$VAL==24,37:38]
is.na(data[data$VAL==24,37:38])
nrow(is.na(data[data$VAL==24,37:38]==FALSE)
nrow(is.na(data[data$VAL==24,37:38]==FALSE))
is.naN(data[data$VAL==24,37:38])
is.nan(data[data$VAL==24,37:38])
bad=is.na(data[data$VAL==24,37:38])
data[!bad]
head(data$VAL)
bad=is.na(data[data$VAL==24,37:38])
data2=data[data$VAL==24,37:38]
bad=is.na(data2)
data[!bad]
data3=data[!bad]
nrow(data3)
data2=data[data$VAL==24,37:38]
head(data2)
good<-complete.cases(data2)
data2[good,]
nrow(data2[good,])
install.packages("RMySQL")
data=read.csv("./tidydata/survey.csv")
library(dplyr)
data1=filter(data, AGS==6 & ACR ==3)
head(data1)
data2=select(data1,AGS,ACR)
head(data2)
data3=mutate(data,agricultureLogical= AGS==6 $ ACR==3)
data3=mutate(data,agricultureLogical= AGS=6 $ ACR=3)
data2=select(data1,agricultureLogical)
jpeg("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg")
agricultureLogical<-data$AGS==6 $ data$ACR==3
agricultureLogical<-(data$AGS==6 $ data$ACR==3)
agricultureLogical<-c(data$AGS==6 $ data$ACR==3)
agricultureLogical<-c(data$AGS == 6 $ data$ACR == 3)
agricultureLogical<-(acs$ACR==3 & acs$AGS==6)
data=read.csv("./tidydata/survey.csv")
agricultureLogical<-(data$ACR==3 & data$AGS==6)
which(agricultureLogical)
class(agricultureLogical)
install.packages("jpeg")
library(jpeg)
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg"
download.file(fileUrl, destfile = "jeff.jpg", method = "curl")
img.n<-readJPEG("jeff.jpg",TRUE)
quantile(img.n,probs=c(0.3,0.8))
fileURL<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
download.file(fileURL, destfile = "GDP.csv", method= "curl" )
gdp<-read.csv("GDP.csv")
fileURL2<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv "
download.file(fileURL2, destfile ="country.csv",method="curl")
cour<-read.csv("country.csv")
names(gdp)
names(cour)
head(select(cour,CountryCode))
head(gdp)
tail(gdp)
head(gdp,n=20)
tail(gdp)
edu<-read.csv("country.csv")
names(edu)
head(select(edu,CountryCode))
gdpclean<-gdp[5:194,]
mergedData=as.data.frame(merge(gdpclean,edu,by.x="X",by.y="CountryCode"))
mergedData$Gross.domestic.product.2012 = as.numeric(as.character(mergedData$Gross.domestic.product.2012))
summary(mergedData[mergedData$Income.Group=="High income: OECD",])
194-5+1
arrange(mergeData,desc(Gross.domestic.product.2012))
arrange(mergedData,desc(Gross.domestic.product.2012))
summary(mergedData[mergedData$Income.Group=="High income: OECD",])
names(gdp)
names(edu)
head(select(edu,Income.Group),n=20)
tapply(Gross.domestic.product.2012,Income.Group,mean,simplify=T)
tapply(Gross.domestic.product.2012,mergedData$Income.Group,mean,simplify=T)
tapply(mergedData$Gross.domestic.product.2012,mergedData$Income.Group,mean,simplify=T)
quantile(mergedData$Gross.domestic.product.2012,probs=c(0.2,0.4,0.6,0.8,1))
library(Hmisc)
mergedData$gdp=cut2(mergedData$Gross.domestic.product.2012,g=5)
table(mergedData$Income.Group,mergedData$gdp)
a=table(mergedData$Income.Group,mergedData$gdp)
rowSums(a)
colSums(a)
mergedData$gdp=cut2(mergedData$Gross.domestic.product.2012,g=5)
a=table(mergedData$Income.Group,mergedData$gdp)
a
